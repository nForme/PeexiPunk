import React, { useState } from "react";
import "./Filter.scss";

type FilterProps = {
  onFilterChange: (category: string) => void;
};

const Filter: React.FC<FilterProps> = ({ onFilterChange }) => {
  const options = ["All", "Game", "News", "Announce", "Update"];
  const defaultOption = "Game";
  const [isOpen, setIsOpen] = useState(false);
  const [selectedOption, setSelectedOption] = useState(defaultOption);

  const handleToggle = () => {
    setIsOpen(!isOpen);
  };

  const handleSelect = (option: string) => {
    setSelectedOption(option);
    setIsOpen(false);
    onFilterChange(option);
  };

  const ArrowUp = (
    <svg
      className="section05RowImage"
      width="50"
      height="30"
      viewBox="0 0 50 30"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      transform="rotate(180)"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M0 0H0.892857H1.78571H2.67857H3.57143H4.46429H5.35714H6.25H7.14286V0.9375V1.875V2.8125V3.75V4.6875V5.625V6.5625V7.5H6.25H5.35714H4.46429H3.57143H2.67857H1.78571H0.892857H0V6.5625V5.625V4.6875V3.75V2.8125V1.875V0.9375V0ZM14.2857 15H13.3929H12.5H11.6071H10.7143H9.82143H8.92857H8.03571H7.14286V14.0625V13.125V12.1875V11.25V10.3125V9.375V8.4375V7.5H8.03571H8.92857H9.82143H10.7143H11.6071H12.5H13.3929H14.2857V8.4375V9.375V10.3125V11.25V12.1875V13.125V14.0625V15ZM21.4286 22.5H20.5357H19.6429H18.75H17.8571H16.9643H16.0714H15.1786H14.2857V21.5625V20.625V19.6875V18.75V17.8125V16.875V15.9375L14.2857 15H15.1786H16.0714H16.9643H17.8571H18.75H19.6429H20.5357H21.4286V15.9375V16.875V17.8125V18.75V19.6875V20.625V21.5625V22.5ZM28.5714 22.5H27.6786H26.7857H25.8929H25H24.1071H23.2143H22.3214H21.4286V23.4375V24.375V25.3125V26.25V27.1875V28.125V29.0625V30H22.3214H23.2143H24.1071H25H25.8929H26.7857H27.6786H28.5714V29.0625V28.125V27.1875V26.25V25.3125V24.375V23.4375V22.5ZM35.7143 15V15.9375V16.875V17.8125V18.75V19.6875V20.625V21.5625V22.5H34.8214H33.9286H33.0357H32.1429H31.25H30.3571H29.4643H28.5714V21.5625V20.625V19.6875V18.75V17.8125V16.875V15.9375V15H29.4643H30.3571H31.25H32.1429H33.0357H33.9286H34.8214H35.7143ZM42.8571 7.5V8.4375V9.375V10.3125V11.25V12.1875V13.125V14.0625V15H41.9643H41.0714H40.1786H39.2857H38.3929H37.5H36.6071H35.7143V14.0625V13.125V12.1875V11.25V10.3125V9.375V8.4375V7.5H36.6071H37.5H38.3929H39.2857H40.1786H41.0714H41.9643H42.8571ZM42.8571 7.5V6.5625V5.625V4.6875V3.75V2.8125V1.875V0.9375V0H43.75H44.6429H45.5357H46.4286H47.3214H48.2143H49.1071H50V0.9375V1.875V2.8125V3.75V4.6875V5.625V6.5625V7.5H49.1071H48.2143H47.3214H46.4286H45.5357H44.6429H43.75H42.8571Z"
        fill="#fefefe"
      ></path>
    </svg>
  );

  const ArrowDown = (
    <svg
      className="section05RowImage"
      width="50"
      height="30"
      viewBox="0 0 50 30"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M0 0H0.892857H1.78571H2.67857H3.57143H4.46429H5.35714H6.25H7.14286V0.9375V1.875V2.8125V3.75V4.6875V5.625V6.5625V7.5H6.25H5.35714H4.46429H3.57143H2.67857H1.78571H0.892857H0V6.5625V5.625V4.6875V3.75V2.8125V1.875V0.9375V0ZM14.2857 15H13.3929H12.5H11.6071H10.7143H9.82143H8.92857H8.03571H7.14286V14.0625V13.125V12.1875V11.25V10.3125V9.375V8.4375V7.5H8.03571H8.92857H9.82143H10.7143H11.6071H12.5H13.3929H14.2857V8.4375V9.375V10.3125V11.25V12.1875V13.125V14.0625V15ZM21.4286 22.5H20.5357H19.6429H18.75H17.8571H16.9643H16.0714H15.1786H14.2857V21.5625V20.625V19.6875V18.75V17.8125V16.875V15.9375L14.2857 15H15.1786H16.0714H16.9643H17.8571H18.75H19.6429H20.5357H21.4286V15.9375V16.875V17.8125V18.75V19.6875V20.625V21.5625V22.5ZM28.5714 22.5H27.6786H26.7857H25.8929H25H24.1071H23.2143H22.3214H21.4286V23.4375V24.375V25.3125V26.25V27.1875V28.125V29.0625V30H22.3214H23.2143H24.1071H25H25.8929H26.7857H27.6786H28.5714V29.0625V28.125V27.1875V26.25V25.3125V24.375V23.4375V22.5ZM35.7143 15V15.9375V16.875V17.8125V18.75V19.6875V20.625V21.5625V22.5H34.8214H33.9286H33.0357H32.1429H31.25H30.3571H29.4643H28.5714V21.5625V20.625V19.6875V18.75V17.8125V16.875V15.9375V15H29.4643H30.3571H31.25H32.1429H33.0357H33.9286H34.8214H35.7143ZM42.8571 7.5V8.4375V9.375V10.3125V11.25V12.1875V13.125V14.0625V15H41.9643H41.0714H40.1786H39.2857H38.3929H37.5H36.6071H35.7143V14.0625V13.125V12.1875V11.25V10.3125V9.375V8.4375V7.5H36.6071H37.5H38.3929H39.2857H40.1786H41.0714H41.9643H42.8571ZM42.8571 7.5V6.5625V5.625V4.6875V3.75V2.8125V1.875V0.9375V0H43.75H44.6429H45.5357H46.4286H47.3214H48.2143H49.1071H50V0.9375V1.875V2.8125V3.75V4.6875V5.625V6.5625V7.5H49.1071H48.2143H47.3214H46.4286H45.5357H44.6429H43.75H42.8571Z"
        fill="#fefefe"
      ></path>
    </svg>
  );

  return (
    <div className="dropdown-block">
      <div className={`dropdown ${isOpen ? "active" : ""}`}>
        <ul className="dropdown-menu">
          <li onClick={handleToggle} className="dropdown-toggle">
            <span className="filter-label">Filter:</span> {selectedOption}{" "}
            {isOpen ? ArrowUp : ArrowDown}
          </li>
          {isOpen &&
            options.map((option) => (
              <li
                key={option}
                onClick={() => handleSelect(option)}
                className={`dropdown-item ${
                  selectedOption === option ? "active" : ""
                }`}
              >
                {option}
              </li>
            ))}
        </ul>
      </div>
    </div>
  );
};
export default Filter;
